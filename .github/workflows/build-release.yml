name: Build and Release (Electron)

on:
  push:
    branches: [main]
    tags: ["v*"]

permissions:
  contents: write

concurrency:
  group: build-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: "false"
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: 18, cache: npm }

      - name: Cache electron (macOS)
        if: runner.os == 'macOS'
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/electron
            ~/Library/Caches/electron-builder
          key: electron-cache-mac-${{ hashFiles('package-lock.json') }}

      - name: Cache electron (Linux)
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: electron-cache-linux-${{ hashFiles('package-lock.json') }}

      - name: Cache electron (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\electron\Cache
            ~\AppData\Local\electron-builder\Cache
          key: electron-cache-win-${{ hashFiles('package-lock.json') }}

      - name: Install deps
        run: npm ci

      - name: Build renderer
        run: npm run build

      - name: Build mac
        if: matrix.os == 'macos-latest'
        run: npx electron-builder --mac --publish ${{ startsWith(github.ref, 'refs/tags/') && 'always' || 'never' }}

      - name: Build windows
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win --publish ${{ startsWith(github.ref, 'refs/tags/') && 'always' || 'never' }}

      - name: Build linux
        if: matrix.os == 'ubuntu-latest'
        run: npx electron-builder --linux --publish ${{ startsWith(github.ref, 'refs/tags/') && 'always' || 'never' }}

      - name: Upload artifacts (branch builds)
        if: github.ref_type == 'branch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: |
            dist/**/*.dmg
            dist/**/*.zip
            dist/**/*.exe
            dist/**/*.AppImage
